# -*- coding: utf-8 -*-
"""fetch_and_append_bls_data

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1hgqLwM240aVlJe-zE7_mu92l6zPvVtSG
"""

import os
import pandas as pd
import requests
from datetime import datetime

# Load API key
BLS_API_KEY = os.getenv("BLS_API_KEY", "YOUR_DEFAULT_API_KEY")  # Replace with your API key
API_URL = "https://api.bls.gov/publicAPI/v2/timeseries/data/"

# Series information
series_info = {
    "CES0000000001": "Total Non-Farm Workers",
    "LNS14000000": "Unemployment Rate",
    "PRS85006112": "Nonfarm Business Unit Labor Costs",
    "CES0500000003": "Total Private Average Hourly Earnings"
}

# Load existing data
DATA_FILE = "bls_data.csv"

def fetch_latest_data(series_id):
    """
    Fetch the latest month's data for a given BLS series ID.
    """
    current_year = datetime.now().year
    current_month = datetime.now().month
    payload = {
        "seriesid": [series_id],
        "startyear": str(current_year),
        "endyear": str(current_year),
        "registrationkey": BLS_API_KEY
    }
    response = requests.post(API_URL, json=payload)
    if response.status_code == 200:
        raw_data = response.json()
        series = raw_data.get("Results", {}).get("series", [])[0]
        data = series.get("data", [])
        latest_entry = data[0] if data else None
        if latest_entry and int(latest_entry["period"][1:]) == current_month:
            return {
                "date": f"{latest_entry['year']}-{latest_entry['period'][1:]}-01",
                "series_id": series_id,
                "value": float(latest_entry["value"]),
                "description": series_info.get(series_id, "Unknown Series")
            }
    return None

def update_dataset():
    """
    Fetch and append the latest data for all series.
    """
    if not os.path.exists(DATA_FILE):
        # Create an empty DataFrame if no file exists
        df = pd.DataFrame(columns=["date", "series_id", "value", "description"])
    else:
        df = pd.read_csv(DATA_FILE)

    new_rows = []
    for series_id in series_info.keys():
        latest_data = fetch_latest_data(series_id)
        if latest_data:
            new_rows.append(latest_data)

    if new_rows:
        new_df = pd.DataFrame(new_rows)
        df = pd.concat([df, new_df], ignore_index=True)
        df.to_csv(DATA_FILE, index=False)
        print("Dataset updated successfully.")
    else:
        print("No new data to append.")

if __name__ == "__main__":
    update_dataset()